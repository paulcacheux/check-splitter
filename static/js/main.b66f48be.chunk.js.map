{"version":3,"sources":["expenseKind.ts","model/calculator.ts","maths/parser.ts","state/selectors.ts","components/FormButton.tsx","components/AddForm.tsx","state/types.ts","components/PriceInputField.tsx","components/AddName.tsx","state/actions.ts","components/CheckTable.tsx","components/AddExpense.tsx","components/LeftMenu.tsx","components/ExpenseHistory.tsx","components/Calculator.tsx","App.tsx","serviceWorker.ts","state/utils.ts","state/reducers.ts","index.tsx","model/localstorage.ts"],"names":["ExpenseKind","expenseKindToString","kind","Percentage","SplitEqually","SplitProportionally","TokenKind","PersonWithExpenses","person","expenses","total","this","basePrice","reduce","a","b","expense","push","getCurrentTotalPrice","computeExpenses","people","peopleCount","length","totalBasePrice","map","peopleWithExpenses","prices","payload","Array","from","finalPrices","targetPrice","res","p","Math","floor","neededCents","curr","v","i","equilibrate","forEach","index","addExpense","finalize","peopleSelector","state","expensesSelector","FormButton","edit","Button","color","variant","size","type","startIcon","useStyles","makeStyles","theme","root","padding","spacing","headerIcon","marginRight","header","display","alignItems","AddForm","title","Icon","handleSubmit","children","finalEdit","classes","Paper","elevation","className","fontSize","Typography","onSubmit","event","preventDefault","defaultExpensesState","counter","PriceInputField","label","name","percentage","value","handleChange","innerHandleChange","parseFloat","target","isNaN","undefined","TextField","margin","fullWidth","InputProps","endAdornment","InputAdornment","position","InputLabelProps","shrink","inputProps","min","max","step","onChange","startAdornment","InnerName","editProps","currentPrice","useState","formState","setFormState","dispatch","useDispatch","PersonIcon","editId","newBasePrice","addPerson","handleDidSubmit","price","AddName","EditName","props","StyledTableCell","withStyles","createStyles","head","backgroundColor","palette","secondary","main","common","white","fontWeight","footer","primary","TableCell","width","marginBottom","table","maxHeight","numberDisplay","toFixed","CheckTable","currentEdit","setCurrentEdit","useSelector","TableContainer","Table","stickyHeader","TableHead","TableRow","align","key","TableBody","editRow","colSpan","Fragment","IconButton","edge","onClick","setCurrentEditOrReset","TableFooter","formRow","justifyContent","formRowItemLeft","breakpoints","up","paddingRight","formRowItemRight","paddingLeft","AddExpense","MoneyIcon","Grid","container","item","xs","sm","FormControl","InputLabel","id","Select","labelId","labelWidth","MenuItem","drawerHeader","mixins","toolbar","reloadServiceWorker","navigator","serviceWorker","getRegistration","then","reg","unregister","window","location","reload","LeftMenu","open","closeCallback","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","marginTop","ExpenseHistoryItem","primaryText","dollars","abs","formatExpensePayload","ListItemSecondaryAction","ExpenseHistory","FLOAT_REGEX","Lexer","input","currentIndex","bufferToken","currentChar","trim","eatWhitespaces","c","Symbol","Operator","floatMatch","substring","match","floatString","Number","Error","token","innerNextToken","nextToken","BinOpExpression","lhs","rhs","op","LiteralExpression","literal","Parser","lexer","peekToken","parseAddExpression","expect","expression","parseExpression","expr","parseMulExpression","advance","parseAtom","parseParenthesisExpression","alert","result","Calculator","content","setContent","setResult","error","setError","Alert","severity","evaluate","err","message","toString","htmlFor","OutlinedInput","menuButton","flexGrow","App","isMenuOpened","setMenuOpened","CssBaseline","AppBar","Toolbar","aria-label","Container","fixed","md","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","convertToCents","num","n","f","round","bankersRounding","reducer","combineReducers","action","filter","loadedState","localStorage","getItem","JSON","parse","version","loadState","store","createStore","composeWithDevTools","subscribe","setItem","stringify","storeState","getState","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b66f48be.chunk.js","sourcesContent":["export enum ExpenseKind {\n    Percentage,\n    SplitEqually,\n    SplitProportionally,\n}\n\nexport function expenseKindToString(kind: ExpenseKind): string {\n    switch (kind) {\n        case ExpenseKind.Percentage:\n            return 'Percentage';\n        case ExpenseKind.SplitEqually:\n            return 'Split Equally';\n        case ExpenseKind.SplitProportionally:\n            return 'Split Proportionally';\n    }\n}\n","import { Person, Expense } from '../state/types';\nimport { ExpenseKind } from '../expenseKind';\n\nconst equilibrate = (prices: Array<number>, targetPrice: number): Array<number> => {\n    const res = prices.map(p => Math.floor(p));\n\n    const currentPrice = res.reduce((curr, v) => curr + v, 0);\n    const neededCents = targetPrice - currentPrice;\n\n    for (let i = 0; i < neededCents; i++) {\n        res[i] += 1;\n    }\n\n    return res;\n};\n\nexport class PersonWithExpenses {\n    person: Person;\n    expenses: Array<number>;\n    total: number;\n\n    constructor(person: Person) {\n        this.person = person;\n        this.expenses = [];\n        this.total = 0.0;\n    }\n\n    getCurrentTotalPrice(): number {\n        return this.person.basePrice + this.expenses.reduce((a, b) => a + b, 0);\n    }\n\n    addExpense(expense: number): void {\n        this.expenses.push(expense);\n    }\n\n    finalize(): void {\n        this.total = this.getCurrentTotalPrice();\n    }\n}\n\nexport const computeExpenses = (people: Array<Person>, expenses: Array<Expense>): Array<PersonWithExpenses> => {\n    const peopleCount = people.length;\n    const totalBasePrice = people.map(person => person.basePrice).reduce((a, b) => a + b, 0);\n\n    const peopleWithExpenses = people.map(person => {\n        return new PersonWithExpenses(person);\n    });\n\n    for (const expense of expenses) {\n        let prices;\n        switch (expense.kind) {\n            case ExpenseKind.Percentage:\n                prices = peopleWithExpenses.map(person => {\n                    return (expense.payload * person.getCurrentTotalPrice()) / 100;\n                });\n                break;\n            case ExpenseKind.SplitEqually:\n                prices = Array.from({ length: peopleCount }, () => expense.payload / peopleCount);\n                break;\n            case ExpenseKind.SplitProportionally:\n                prices = peopleWithExpenses.map(person => {\n                    const percent = person.person.basePrice / totalBasePrice;\n                    return percent * expense.payload;\n                });\n                break;\n        }\n\n        const finalPrices = equilibrate(prices, expense.payload);\n\n        peopleWithExpenses.forEach((person, index) => {\n            person.addExpense(finalPrices[index]);\n        });\n    }\n\n    peopleWithExpenses.forEach(person => person.finalize());\n    return peopleWithExpenses;\n};\n","enum TokenKind {\n    Number,\n    Symbol,\n    Operator,\n}\n\ninterface NumberToken {\n    type: TokenKind.Number;\n    value: number;\n}\n\ninterface SymbolToken {\n    type: TokenKind.Symbol;\n    value: '(' | ')';\n}\n\ntype OperatorKind = '+' | '-' | '*' | '/';\n\ninterface OperatorToken {\n    type: TokenKind.Operator;\n    value: OperatorKind;\n}\n\ntype Token = NumberToken | SymbolToken | OperatorToken;\n\nconst FLOAT_REGEX = /^\\d+(\\.\\d+)?/;\n\nclass Lexer {\n    input: string;\n    currentIndex: number;\n    bufferToken?: Token;\n\n    constructor(input: string) {\n        this.input = input;\n        this.currentIndex = 0;\n    }\n\n    currentChar(): string {\n        return this.input[this.currentIndex];\n    }\n\n    eatWhitespaces(): void {\n        // we loop while the current char is a whitespace\n        while (this.currentIndex < this.input.length && this.currentChar().trim().length === 0) {\n            this.currentIndex += 1;\n        }\n        return;\n    }\n\n    innerNextToken(): Token | null {\n        this.eatWhitespaces();\n        if (this.currentIndex >= this.input.length) {\n            return null;\n        }\n\n        const c = this.currentChar();\n        if (c === '(' || c === ')') {\n            this.currentIndex += 1;\n            return { type: TokenKind.Symbol, value: c };\n        } else if (c === '+' || c === '-' || c === '*' || c === '/') {\n            this.currentIndex += 1;\n            return { type: TokenKind.Operator, value: c };\n        } else {\n            const floatMatch = this.input.substring(this.currentIndex).match(FLOAT_REGEX);\n            if (floatMatch) {\n                const floatString = floatMatch[0];\n                this.currentIndex += floatString.length;\n                const value = parseFloat(floatString);\n                return { type: TokenKind.Number, value };\n            }\n        }\n\n        throw new Error(`Unknown character in input string: '${c}'`);\n    }\n\n    nextToken(): Token | null {\n        if (this.bufferToken) {\n            const token = this.bufferToken;\n            this.bufferToken = undefined;\n            return token;\n        }\n\n        return this.innerNextToken();\n    }\n\n    peekToken(): Token | null {\n        if (this.bufferToken) {\n            return this.bufferToken;\n        }\n\n        const token = this.innerNextToken();\n        if (token) {\n            this.bufferToken = token;\n        }\n        return token;\n    }\n\n    advance(): void {\n        // we ignore the next token\n        this.nextToken();\n    }\n}\n\ninterface Expression {\n    value(): number;\n}\n\nclass BinOpExpression implements Expression {\n    lhs: Expression;\n    rhs: Expression;\n    op: OperatorKind;\n\n    constructor(lhs: Expression, rhs: Expression, op: OperatorKind) {\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.op = op;\n    }\n\n    value(): number {\n        switch (this.op) {\n            case '*':\n                return this.lhs.value() * this.rhs.value();\n            case '+':\n                return this.lhs.value() + this.rhs.value();\n            case '-':\n                return this.lhs.value() - this.rhs.value();\n            case '/':\n                return this.lhs.value() / this.rhs.value();\n        }\n    }\n}\n\nclass LiteralExpression implements Expression {\n    literal: number;\n\n    constructor(literal: number) {\n        this.literal = literal;\n    }\n\n    value(): number {\n        return this.literal;\n    }\n}\n\nclass Parser {\n    lexer: Lexer;\n\n    constructor(lexer: Lexer) {\n        this.lexer = lexer;\n    }\n\n    expect(type: TokenKind, value?: any): void {\n        const token = this.lexer.nextToken();\n        if (token && token.type === type && token.value === value) {\n            return;\n        }\n        throw new Error('Unexpected token');\n    }\n\n    parseExpression(): Expression | null {\n        const token = this.lexer.peekToken();\n        if (!token) {\n            return null;\n        }\n\n        return this.parseAddExpression();\n    }\n\n    parseParenthesisExpression(): Expression {\n        this.expect(TokenKind.Symbol, '(');\n        const expression = this.parseExpression();\n        if (!expression) {\n            throw new Error('Unexpected EOL');\n        }\n        this.expect(TokenKind.Symbol, ')');\n        return expression;\n    }\n\n    parseAddExpression(): Expression {\n        let expr = this.parseMulExpression();\n        while (true) {\n            const token = this.lexer.peekToken();\n            if (token && token.type === TokenKind.Operator && (token.value === '+' || token.value === '-')) {\n                this.lexer.advance();\n                const rhs = this.parseMulExpression();\n                expr = new BinOpExpression(expr, rhs, token.value);\n            } else {\n                break;\n            }\n        }\n        return expr;\n    }\n    parseMulExpression(): Expression {\n        let expr = this.parseAtom();\n        while (true) {\n            const token = this.lexer.peekToken();\n            if (token && token.type === TokenKind.Operator && (token.value === '*' || token.value === '/')) {\n                this.lexer.advance();\n                const rhs = this.parseAtom();\n                expr = new BinOpExpression(expr, rhs, token.value);\n            } else {\n                break;\n            }\n        }\n        return expr;\n    }\n\n    parseAtom(): Expression {\n        const token = this.lexer.peekToken();\n        if (!token) {\n            throw new Error('Expected atom');\n        }\n\n        if (token.type === TokenKind.Number) {\n            this.lexer.advance();\n            return new LiteralExpression(token.value);\n        } else if (token.type === TokenKind.Symbol && token.value === '(') {\n            return this.parseParenthesisExpression();\n        } else {\n            throw new Error('Unexpected token');\n        }\n    }\n}\n\nexport const evaluate = (input: string): number | null => {\n    const lexer = new Lexer(input);\n    const parser = new Parser(lexer);\n    const expression = parser.parseExpression();\n    if (expression) {\n        return expression.value();\n    } else {\n        return null;\n    }\n};\n","import { State } from './reducers';\nimport { Person, Expense } from './types';\n\nexport const peopleSelector = (state: State): Array<Person> => {\n    return state.people;\n};\n\nexport const expensesSelector = (state: State): Array<Expense> => {\n    return state.expenses.expenses;\n};\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport const FormButton: React.FC<{ edit: boolean }> = ({ edit }) => {\n    if (edit) {\n        return (\n            <Button color=\"primary\" variant=\"contained\" size=\"large\" type=\"submit\" startIcon={<EditIcon />}>\n                Edit\n            </Button>\n        );\n    } else {\n        return (\n            <Button color=\"primary\" variant=\"contained\" size=\"large\" type=\"submit\" startIcon={<AddIcon />}>\n                Add\n            </Button>\n        );\n    }\n};\n","import React from 'react';\nimport { makeStyles, Paper, Typography, SvgIconProps } from '@material-ui/core';\nimport { FormButton } from './FormButton';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n    headerIcon: {\n        marginRight: theme.spacing(1),\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\ninterface AddFormProps {\n    title: string;\n    edit?: boolean;\n    Icon(props: SvgIconProps): JSX.Element;\n    handleSubmit?(event: React.FormEvent<HTMLFormElement>): void;\n}\n\nexport const AddForm: React.FC<AddFormProps> = ({ title, edit, Icon, handleSubmit, children }) => {\n    const finalEdit = edit === true;\n    const classes = useStyles();\n    const preventAndHandleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        if (handleSubmit) {\n            handleSubmit(event);\n        }\n    };\n\n    return (\n        <Paper elevation={3} className={classes.root}>\n            <div className={classes.header}>\n                <Icon fontSize=\"large\" className={classes.headerIcon} />\n                <Typography variant=\"h5\">{title}</Typography>\n            </div>\n            <form onSubmit={preventAndHandleSubmit}>\n                {children}\n                <FormButton edit={finalEdit} />\n            </form>\n        </Paper>\n    );\n};\n","import { ExpenseKind } from '../expenseKind';\n\nexport const RESET_STATE = 'RESET_STATE';\nexport const ADD_PERSON = 'ADD_PERSON';\nexport const EDIT_PERSON = 'EDIT_PERSON';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\n\n// Last changed when adding ids to expenses\nexport const stateVersion = 2;\n\nexport interface Person {\n    name: string;\n    basePrice: number;\n}\n\nexport interface Expense {\n    id: number;\n    name: string;\n    payload: number;\n    kind: ExpenseKind;\n}\n\nexport type PeopleState = Array<Person>;\n\nexport interface ExpensesState {\n    counter: number;\n    expenses: Array<Expense>;\n}\n\nexport const defaultExpensesState: ExpensesState = {\n    counter: 0,\n    expenses: [],\n};\n","import React from 'react';\nimport { TextField, InputAdornment } from '@material-ui/core';\n\nexport interface PriceInputProps {\n    label: string;\n    name: string;\n    percentage?: boolean;\n    value?: number;\n    handleChange(price: number | undefined): void;\n}\n\nexport const PriceInputField: React.FC<PriceInputProps> = ({ label, name, percentage, value, handleChange }) => {\n    const innerHandleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        let payload: number | undefined = parseFloat(event.target.value);\n        if (isNaN(payload)) {\n            payload = undefined;\n        }\n        handleChange(payload);\n    };\n\n    if (percentage) {\n        return (\n            <TextField\n                label={label}\n                variant=\"outlined\"\n                margin=\"normal\"\n                name={name}\n                fullWidth\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n                }}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                type=\"number\"\n                inputProps={{\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                }}\n                value={value || ''}\n                onChange={innerHandleChange}\n            />\n        );\n    } else {\n        return (\n            <TextField\n                label={label}\n                variant=\"outlined\"\n                margin=\"normal\"\n                name={name}\n                value={value || ''}\n                fullWidth\n                InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                }}\n                inputProps={{\n                    step: 0.01,\n                }}\n                type=\"number\"\n                onChange={innerHandleChange}\n            />\n        );\n    }\n};\n","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { AddForm } from './AddForm';\nimport { useDispatch } from 'react-redux';\nimport { addPerson, editPerson } from '../state/actions';\nimport { PriceInputField } from './PriceInputField';\n\ninterface PersonFormState {\n    name: string;\n    basePrice?: number;\n}\n\ninterface InnerNameProps {\n    title: string;\n    editProps?: EditProps;\n}\n\ninterface EditProps {\n    editId: number;\n    name: string;\n    currentPrice: number;\n    handleDidSubmit?(): void;\n}\n\nconst InnerName: React.FC<InnerNameProps> = ({ title, editProps }) => {\n    let basePrice = undefined;\n    const currentPrice = editProps?.currentPrice;\n    if (currentPrice) {\n        basePrice = currentPrice / 100;\n    }\n    const [formState, setFormState] = useState<PersonFormState>({\n        name: editProps?.name || '',\n        basePrice,\n    });\n\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value = event.target.value;\n        setFormState(state => ({ ...state, name: value }));\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (): void => {\n        if (formState.name !== '' && formState.basePrice && formState.basePrice > 0) {\n            if (editProps) {\n                dispatch(editPerson(editProps.editId, formState.basePrice));\n            } else {\n                dispatch(addPerson(formState.name, formState.basePrice));\n            }\n            setFormState({\n                name: '',\n                basePrice: undefined,\n            });\n            editProps?.handleDidSubmit && editProps.handleDidSubmit();\n        }\n    };\n\n    return (\n        <AddForm title={title} Icon={PersonIcon} handleSubmit={handleSubmit} edit={editProps !== undefined}>\n            <TextField\n                label=\"Name\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                name=\"name\"\n                value={formState.name}\n                fullWidth\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={handleNameChange}\n            />\n            <PriceInputField\n                label=\"Base Price\"\n                name=\"basePrice\"\n                value={formState.basePrice}\n                handleChange={(price: number | undefined): void => {\n                    setFormState(state => ({ ...state, basePrice: price }));\n                }}\n            />\n        </AddForm>\n    );\n};\n\nexport const AddName: React.FC = () => {\n    return <InnerName title=\"Add a new person\" />;\n};\n\nexport const EditName: React.FC<EditProps> = props => {\n    return <InnerName title=\"Edit\" editProps={props} />;\n};\n","import { ADD_PERSON, ADD_EXPENSE, EDIT_PERSON, RESET_STATE, REMOVE_EXPENSE } from './types';\nimport { ExpenseKind } from '../expenseKind';\n\nexport interface ResetAction {\n    type: typeof RESET_STATE;\n}\n\nexport interface AddPersonAction {\n    type: typeof ADD_PERSON;\n    name: string;\n    basePrice: number;\n}\n\nexport interface EditPersonAction {\n    type: typeof EDIT_PERSON;\n    editId: number;\n    newBasePrice: number;\n}\n\nexport interface AddExpenseAction {\n    type: typeof ADD_EXPENSE;\n    name: string;\n    kind: ExpenseKind;\n    payload: number;\n}\n\nexport interface RemoveExpenseAction {\n    type: typeof REMOVE_EXPENSE;\n    id: number;\n}\n\nexport type RootAction = ResetAction | AddPersonAction | EditPersonAction | AddExpenseAction | RemoveExpenseAction;\n\nexport const resetState = (): ResetAction => {\n    return {\n        type: RESET_STATE,\n    };\n};\n\nexport const addPerson = (name: string, basePrice: number): AddPersonAction => {\n    return {\n        type: ADD_PERSON,\n        name,\n        basePrice,\n    };\n};\n\nexport const editPerson = (editId: number, newBasePrice: number): EditPersonAction => {\n    return {\n        type: EDIT_PERSON,\n        editId,\n        newBasePrice,\n    };\n};\n\nexport const addExpense = (name: string, kind: ExpenseKind, payload: number): AddExpenseAction => {\n    return {\n        type: ADD_EXPENSE,\n        name,\n        kind,\n        payload,\n    };\n};\n\nexport const removeExpense = (id: number): RemoveExpenseAction => {\n    return {\n        type: REMOVE_EXPENSE,\n        id,\n    };\n};\n","import React, { useState } from 'react';\nimport {\n    Paper,\n    Table,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    makeStyles,\n    withStyles,\n    createStyles,\n    TableFooter,\n    IconButton,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { computeExpenses } from '../model/calculator';\nimport { peopleSelector, expensesSelector } from '../state/selectors';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { EditName } from './AddName';\n\ninterface Row {\n    name: string;\n    basePrice: number;\n    tip: number;\n}\n\nconst StyledTableCell = withStyles(theme => {\n    return createStyles({\n        head: {\n            backgroundColor: theme.palette.secondary.main,\n            color: theme.palette.common.white,\n            fontWeight: 'bold',\n        },\n        footer: {\n            color: theme.palette.primary.main,\n            fontWeight: 'bold',\n            fontSize: '1.1em',\n        },\n    });\n})(TableCell);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        maxHeight: '50vh',\n    },\n}));\n\nconst numberDisplay = (value: number): string => {\n    return (value / 100).toFixed(2);\n};\n\nexport const CheckTable: React.FC = () => {\n    const classes = useStyles();\n\n    const [currentEdit, setCurrentEdit] = useState<number | null>(null);\n\n    const people = useSelector(peopleSelector);\n    const expenses = useSelector(expensesSelector);\n\n    const peopleWithExpenses = computeExpenses(people, expenses);\n    const total = peopleWithExpenses.map(people => people.total).reduce((a, b) => a + b, 0);\n\n    const setCurrentEditOrReset = (index: number): void => {\n        if (index === null || currentEdit === index) {\n            setCurrentEdit(null);\n        } else {\n            setCurrentEdit(index);\n        }\n    };\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <TableContainer className={classes.table}>\n                <Table stickyHeader>\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell align=\"left\">Name</StyledTableCell>\n                            <StyledTableCell align=\"right\">Base Price</StyledTableCell>\n                            {expenses.map((expense, index) => {\n                                return (\n                                    <StyledTableCell align=\"right\" key={index}>\n                                        {expense.name}\n                                    </StyledTableCell>\n                                );\n                            })}\n                            <StyledTableCell align=\"right\">Total</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {peopleWithExpenses.map((person, index) => {\n                            const editRow = (\n                                <TableRow>\n                                    <TableCell colSpan={4 + person.expenses.length}>\n                                        <EditName\n                                            editId={index}\n                                            name={person.person.name}\n                                            currentPrice={person.person.basePrice}\n                                            handleDidSubmit={(): void => setCurrentEdit(null)}\n                                        ></EditName>\n                                    </TableCell>\n                                </TableRow>\n                            );\n                            return (\n                                <React.Fragment key={index}>\n                                    <TableRow>\n                                        <TableCell padding=\"checkbox\">\n                                            <IconButton\n                                                edge=\"end\"\n                                                size=\"small\"\n                                                onClick={(): void => setCurrentEditOrReset(index)}\n                                            >\n                                                <EditIcon />\n                                            </IconButton>\n                                        </TableCell>\n                                        <TableCell align=\"left\">{person.person.name}</TableCell>\n                                        <TableCell align=\"right\">{numberDisplay(person.person.basePrice)}</TableCell>\n                                        {person.expenses.map((expense, index) => {\n                                            return (\n                                                <TableCell align=\"right\" key={index}>\n                                                    {numberDisplay(expense)}\n                                                </TableCell>\n                                            );\n                                        })}\n                                        <TableCell align=\"right\">{numberDisplay(person.total)}</TableCell>\n                                    </TableRow>\n                                    {currentEdit === index && editRow}\n                                </React.Fragment>\n                            );\n                        })}\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell align=\"left\">Total</StyledTableCell>\n                            <StyledTableCell align=\"right\" colSpan={expenses.length + 2}>\n                                {numberDisplay(total)}\n                            </StyledTableCell>\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </TableContainer>\n        </Paper>\n    );\n};\n","import React, { useState } from 'react';\nimport { TextField, makeStyles, FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { AddForm } from './AddForm';\nimport { ExpenseKind } from '../expenseKind';\nimport { useDispatch } from 'react-redux';\nimport { addExpense } from '../state/actions';\nimport { PriceInputField } from './PriceInputField';\n\nconst useStyles = makeStyles(theme => ({\n    formRow: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    formRowItemLeft: {\n        [theme.breakpoints.up('sm')]: {\n            paddingRight: theme.spacing(1),\n        },\n    },\n    formRowItemRight: {\n        [theme.breakpoints.up('sm')]: {\n            paddingLeft: theme.spacing(1),\n        },\n    },\n}));\n\ninterface ExpenseFormState {\n    name: string;\n    kind: ExpenseKind;\n    payload?: number;\n}\n\nexport const AddExpense: React.FC = () => {\n    const classes = useStyles();\n\n    const [formState, setFormState] = useState<ExpenseFormState>({\n        name: '',\n        kind: ExpenseKind.SplitEqually,\n    });\n\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        if (event.target) {\n            const value = event.target.value;\n            setFormState(state => ({ ...state, name: value }));\n        }\n    };\n\n    const handleSelectChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>): void => {\n        const value = event.target.value as ExpenseKind;\n        setFormState(state => ({ ...state, kind: value }));\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (): void => {\n        if (formState.name !== '' && formState.payload && formState.payload) {\n            dispatch(addExpense(formState.name, formState.kind, formState.payload));\n            setFormState({\n                name: '',\n                kind: ExpenseKind.SplitEqually,\n                payload: undefined,\n            });\n        }\n    };\n\n    return (\n        <AddForm title=\"Add a new expense\" Icon={MoneyIcon} handleSubmit={handleSubmit}>\n            <TextField\n                label=\"Name\"\n                name=\"name\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                value={formState.name}\n                onChange={handleNameChange}\n            />\n            <Grid container>\n                <Grid item xs={12} sm={6} className={classes.formRowItemLeft}>\n                    <FormControl margin=\"normal\" fullWidth>\n                        <InputLabel id=\"kind-select-label\" variant=\"outlined\">\n                            Kind\n                        </InputLabel>\n                        <Select\n                            labelId=\"kind-select-label\"\n                            labelWidth={40}\n                            fullWidth\n                            value={formState.kind}\n                            variant=\"outlined\"\n                            onChange={handleSelectChange}\n                        >\n                            <MenuItem value={ExpenseKind.Percentage}>Percentage</MenuItem>\n                            <MenuItem value={ExpenseKind.SplitEqually}>Split equally</MenuItem>\n                            <MenuItem value={ExpenseKind.SplitProportionally}>Split proportionally</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6} className={classes.formRowItemRight}>\n                    <PriceInputField\n                        label=\"Price\"\n                        name=\"price\"\n                        percentage={formState.kind === ExpenseKind.Percentage}\n                        value={formState.payload}\n                        handleChange={(price: number | undefined): void => {\n                            setFormState(state => ({ ...state, payload: price }));\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </AddForm>\n    );\n};\n","import React from 'react';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { makeStyles, Drawer, IconButton, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { resetState } from '../state/actions';\n\nconst useStyles = makeStyles(theme => ({\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n}));\n\nconst reloadServiceWorker = (): void => {\n    navigator.serviceWorker.getRegistration().then(function(reg) {\n        if (reg) {\n            reg.unregister().then(function() {\n                window.location.reload(true);\n            });\n        } else {\n            window.location.reload(true);\n        }\n    });\n};\n\nexport const LeftMenu: React.FC<{ open: boolean; closeCallback(): void }> = ({ open, closeCallback }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const handleReset = (): void => {\n        dispatch(resetState());\n        closeCallback();\n    };\n\n    return (\n        <Drawer open={open}>\n            <div className={classes.drawerHeader}>\n                <IconButton onClick={closeCallback}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <List>\n                <ListItem button onClick={handleReset}>\n                    <ListItemIcon>\n                        <DeleteIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Reset\" />\n                </ListItem>\n                <ListItem button onClick={reloadServiceWorker}>\n                    <ListItemIcon>\n                        <CachedIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Update and reload\" />\n                </ListItem>\n            </List>\n        </Drawer>\n    );\n};\n","import React from 'react';\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    Paper,\n    makeStyles,\n    ListItemSecondaryAction,\n    IconButton,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Expense } from '../state/types';\nimport { ExpenseKind, expenseKindToString } from '../expenseKind';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { expensesSelector } from '../state/selectors';\nimport { removeExpense } from '../state/actions';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst formatExpensePayload = (kind: ExpenseKind, payload: number): string => {\n    if (kind === ExpenseKind.Percentage) {\n        return `${payload}%`;\n    } else {\n        const dollars = (Math.abs(payload) / 100).toFixed(2);\n        if (payload >= 0) {\n            return `$${dollars}`;\n        } else {\n            return `-$${dollars}`;\n        }\n    }\n};\n\nconst ExpenseHistoryItem: React.FC<{ expense: Expense }> = ({ expense }) => {\n    const primaryText = `${expense.name}: ${formatExpensePayload(expense.kind, expense.payload)}`;\n\n    const dispatch = useDispatch();\n\n    const handleClick = (): void => {\n        dispatch(removeExpense(expense.id));\n    };\n\n    return (\n        <ListItem>\n            <ListItemText primary={primaryText} secondary={expenseKindToString(expense.kind)} />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" onClick={handleClick}>\n                    <DeleteIcon />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n};\n\nexport const ExpenseHistory: React.FC = () => {\n    const classes = useStyles();\n    const expenses = useSelector(expensesSelector);\n\n    if (expenses.length === 0) {\n        return null;\n    }\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <List>\n                {expenses.map(expense => {\n                    return <ExpenseHistoryItem expense={expense} key={expense.id} />;\n                })}\n            </List>\n        </Paper>\n    );\n};\n","import React, { useState } from 'react';\nimport {\n    Paper,\n    makeStyles,\n    Typography,\n    Button,\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    InputAdornment,\n} from '@material-ui/core';\nimport DialPadIcon from '@material-ui/icons/Dialpad';\nimport { evaluate } from '../maths/parser';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    headerIcon: {\n        marginRight: theme.spacing(1),\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    alert: {\n        marginTop: theme.spacing(1),\n    },\n    result: {\n        padding: theme.spacing(1),\n        backgroundColor: '#f5f5f5',\n    },\n}));\n\nexport const Calculator: React.FC = () => {\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [result, setResult] = useState<number | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        try {\n            const value = evaluate(content);\n            setResult(value);\n        } catch (err) {\n            setError(err.message || err.toString());\n        }\n    };\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <div className={classes.header}>\n                <DialPadIcon fontSize=\"large\" className={classes.headerIcon} />\n                <Typography variant=\"h5\">Calculator</Typography>\n            </div>\n            {error && (\n                <Alert severity=\"error\" className={classes.alert}>\n                    {error}\n                </Alert>\n            )}\n            <form onSubmit={handleSubmit}>\n                <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\n                    <InputLabel htmlFor=\"calculator-input\">Input</InputLabel>\n                    <OutlinedInput\n                        id=\"calculator-input\"\n                        value={content}\n                        onChange={(event): void => {\n                            setContent(event.target.value);\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <Button color=\"primary\" variant=\"contained\" size=\"large\" type=\"submit\">\n                                    =\n                                </Button>\n                            </InputAdornment>\n                        }\n                        labelWidth={40}\n                    />\n                </FormControl>\n            </form>\n            {result && (\n                <Paper elevation={2} className={classes.result}>\n                    <Typography variant=\"subtitle1\"> = {result.toFixed(2)}</Typography>\n                </Paper>\n            )}\n        </Paper>\n    );\n};\n","import React, { useState } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Container, Grid, CssBaseline } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CheckTable } from './components/CheckTable';\nimport { AddName } from './components/AddName';\nimport { AddExpense } from './components/AddExpense';\nimport { LeftMenu } from './components/LeftMenu';\nimport { ExpenseHistory } from './components/ExpenseHistory';\nimport { Calculator } from './components/Calculator';\n\nconst useStyles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    container: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nconst App: React.FC = () => {\n    const classes = useStyles();\n\n    const [isMenuOpened, setMenuOpened] = useState(false);\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        onClick={(): void => setMenuOpened(true)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Check Splitter\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <LeftMenu open={isMenuOpened} closeCallback={(): void => setMenuOpened(false)} />\n            <Container fixed className={classes.container}>\n                <CheckTable />\n                <Grid container spacing={3}>\n                    <Grid item sm={12} md={4}>\n                        <AddName />\n                    </Grid>\n                    <Grid item sm={12} md={8}>\n                        <AddExpense />\n                    </Grid>\n                </Grid>\n                <Calculator />\n                <ExpenseHistory />\n            </Container>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","const bankersRounding = (num: number): number => {\n    const n = +num.toFixed(8); // Avoid rounding errors\n    const i = Math.floor(n),\n        f = n - i;\n    const e = 1e-8; // Allow for rounding errors in f\n    const r = f > 0.5 - e && f < 0.5 + e ? (i % 2 === 0 ? i : i + 1) : Math.round(n);\n    return r;\n};\n\nexport const convertToCents = (value: number): number => {\n    const cents = value * 100;\n    return bankersRounding(cents);\n};\n","import {\n    ADD_PERSON,\n    ADD_EXPENSE,\n    RESET_STATE,\n    PeopleState,\n    ExpensesState,\n    defaultExpensesState,\n    REMOVE_EXPENSE,\n    EDIT_PERSON,\n} from './types';\nimport { RootAction } from './actions';\nimport { convertToCents } from './utils';\nimport { combineReducers } from 'redux';\nimport { ExpenseKind } from '../expenseKind';\n\nconst peopleReducer = (state: PeopleState = [], action: RootAction): PeopleState => {\n    switch (action.type) {\n        case ADD_PERSON:\n            const person = { name: action.name, basePrice: convertToCents(action.basePrice) };\n            return [...state, person];\n        case EDIT_PERSON:\n            return state.map((person, index) => {\n                if (index === action.editId) {\n                    return { ...person, basePrice: convertToCents(action.newBasePrice) };\n                } else {\n                    return person;\n                }\n            });\n        case RESET_STATE:\n            return [];\n        default:\n            return state;\n    }\n};\n\nconst expensesReducer = (state: ExpensesState = defaultExpensesState, action: RootAction): ExpensesState => {\n    switch (action.type) {\n        case ADD_EXPENSE:\n            const payload = action.kind === ExpenseKind.Percentage ? action.payload : convertToCents(action.payload);\n            const expense = {\n                id: state.counter,\n                name: action.name,\n                kind: action.kind,\n                payload,\n            };\n            return {\n                counter: state.counter + 1,\n                expenses: [...state.expenses, expense],\n            };\n        case REMOVE_EXPENSE:\n            return {\n                counter: state.counter,\n                expenses: state.expenses.filter(expense => expense.id !== action.id),\n            };\n        case RESET_STATE:\n            return defaultExpensesState;\n        default:\n            return state;\n    }\n};\n\nexport const reducer = combineReducers({\n    people: peopleReducer,\n    expenses: expensesReducer,\n});\n\nexport type State = ReturnType<typeof reducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { reducer } from './state/reducers';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { storeState, loadState } from './model/localstorage';\n\nconst loadedState = loadState() || undefined;\n\nconst store = createStore(reducer, loadedState, composeWithDevTools());\n\nstore.subscribe(() => {\n    const state = store.getState();\n    storeState(state);\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { State } from '../state/reducers';\nimport { stateVersion } from '../state/types';\n\nconst LOCAL_STORAGE_KEY = 'check-splitter-state';\n\nexport const loadState = (key = LOCAL_STORAGE_KEY): State | null => {\n    try {\n        const item = window.localStorage.getItem(key);\n        if (!item) {\n            return null;\n        }\n\n        const payload = item ? JSON.parse(item) : null;\n        if ('version' in payload && payload.version === stateVersion) {\n            return payload.state;\n        } else {\n            return null;\n        }\n    } catch (error) {\n        console.error(error);\n        return null;\n    }\n};\n\nexport const storeState = (state: State, key = LOCAL_STORAGE_KEY): void => {\n    const payload = {\n        version: stateVersion,\n        state,\n    };\n    try {\n        window.localStorage.setItem(key, JSON.stringify(payload));\n    } catch (error) {\n        console.error(error);\n    }\n};\n"],"sourceRoot":""}